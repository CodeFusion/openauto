<?xml version="1.0" ?>
<node cppname="com.jci.lvds_object">
    <interface name="com.jci.lvds">


        <annotation name="def_struct_names.blmRequest_st" value="id, action, msb, lsb"/>


        <annotation name="def_struct_types.blmRequest_st" value="u, u, y, y"/>


        <annotation name="def_struct_names.verResponse_st" value="id, version"/>


        <annotation name="def_struct_types.verResponse_st" value="u, s"/>


        <annotation name="com.jci.def_struct_names.display_status_data_t" value="data"/>


        <annotation name="com.jci.def_struct_types.display_status_data_t" value="y"/>


        <annotation name="def_struct_names.videoTune_st" value="preemp, eqtune, boost, hpftune"/>


        <annotation name="def_struct_types.videoTune_st" value="u, u, u, u"/>


        <annotation name="def_struct_names.touchEvent_st" value="x, y"/>


        <annotation name="def_struct_types.touchEvent_st" value="q, q"/>


        <annotation name="def_struct_names.touchEvents_st" value="num_touch, touch1, touch2, touch3, touch4"/>


        <annotation name="def_struct_types.touchEvents_st"
                    value="y, touchEvent_st, touchEvent_st, touchEvent_st, touchEvent_st"/>


        <method name="SetBrightness">


            <annotation name="type_ref.brightnessLevel" value="blmRequest_st"/>


            <annotation name="async" value="client"/>


            <arg direction="in" name="brightnessLevel" type="(uuyy)"/>


            <arg direction="out" name="return_value" type="n"/>


        </method>


        <method name="GetSoftwareTPVersion">


            <annotation name="type_ref.softwareTPVersion" value="blmRequest_st"/>


            <annotation name="async" value="client"/>


            <arg direction="in" name="softwareTPVersion" type="(uuyy)"/>


            <arg direction="out" name="return_tpSoftwareVer" type="s"/>


        </method>


        <method name="GetSoftwareDispVersion">


            <annotation name="type_ref.softwareDispVersion" value="blmRequest_st"/>


            <annotation name="async" value="client"/>


            <arg direction="in" name="softwareDispVersion" type="(uuyy)"/>


            <arg direction="out" name="return_dispSoftwareVer" type="s"/>


        </method>


        <method name="SetNormalMode">


            <annotation name="type_ref.NormalMode" value="blmRequest_st"/>


            <annotation name="async" value="client"/>


            <arg direction="in" name="normalMode" type="(uuyy)"/>


            <arg direction="out" name="return_NormalMode" type="s"/>


        </method>


        <method name="SetSleepMode">


            <annotation name="type_ref.SleepMode" value="blmRequest_st"/>


            <annotation name="async" value="client"/>


            <arg direction="in" name="sleepMode" type="(uuyy)"/>


            <arg direction="out" name="return_SleepMode" type="s"/>


        </method>


        <method name="SetDiagMode">


            <annotation name="type_ref.DiagMode" value="blmRequest_st"/>


            <annotation name="async" value="client"/>


            <arg direction="in" name="diagMode" type="(uuyy)"/>


            <arg direction="out" name="return_DiagMode" type="s"/>


        </method>


        <method name="SetExtendMode">


            <annotation name="type_ref.ExtendMode" value="blmRequest_st"/>


            <annotation name="async" value="client"/>


            <arg direction="in" name="extendMode" type="(uuyy)"/>


            <arg direction="out" name="return_ExtendMode" type="s"/>


        </method>


        <method name="SetACCOff">


            <annotation name="type_ref.ACCOff" value="blmRequest_st"/>


            <annotation name="async" value="client"/>


            <arg direction="in" name="aCCOff" type="(uuyy)"/>


            <arg direction="out" name="return_ACCOff" type="n"/>


        </method>


        <method name="SetDispOn">


            <annotation name="type_ref.DispOn" value="blmRequest_st"/>


            <annotation name="async" value="client"/>


            <arg direction="in" name="dispOn" type="(uuyy)"/>


            <arg direction="out" name="return_DispOn" type="n"/>


        </method>


        <method name="SetDispOff">


            <annotation name="type_ref.DispOff" value="blmRequest_st"/>


            <annotation name="async" value="client"/>


            <arg direction="in" name="dispOff" type="(uuyy)"/>


            <arg direction="out" name="return_DispOff" type="n"/>


        </method>


        <method name="EnablePRBS">


            <annotation name="type_ref.EnablePRBSAutoTest" value="blmRequest_st"/>


            <annotation name="async" value="client"/>


            <arg direction="in" name="enablePRBSAutoTest" type="(uuyy)"/>


            <arg direction="out" name="return_EnPRBS" type="s"/>


        </method>


        <method name="DisablePRBS">


            <annotation name="type_ref.DisablePRBSAutoTest" value="blmRequest_st"/>


            <annotation name="async" value="client"/>


            <arg direction="in" name="disablePRBSAutoTest" type="(uuyy)"/>


            <arg direction="out" name="return_DisPRBS" type="s"/>


        </method>


        <method name="PRBSReport">


            <annotation name="type_ref.PRBSAutoTestReport" value="blmRequest_st"/>


            <annotation name="async" value="client"/>


            <arg direction="in" name="pRBSAutoTestReport" type="(uuyy)"/>


            <arg direction="out" name="return_PRBSReport" type="s"/>


        </method>


        <method name="SystemACCMonitoring">


            <annotation name="async" value="client"/>


            <arg direction="in" name="requestId" type="u"/>


            <arg direction="out" name="return_status" type="u"/>


        </method>


        <method name="SpeedRestriction">


            <annotation name="async" value="client"/>


            <arg direction="in" name="requestId" type="u"/>


            <arg direction="out" name="return_status" type="u"/>


        </method>


        <method name="SetHdcpMode">


            <annotation name="async" value="client"/>


            <arg direction="in" name="mode" type="u"/>


            <arg direction="out" name="return_status" type="u"/>


        </method>


        <method name="GetErrorEncounteredStatus">


            <annotation name="async" value="client"/>


            <arg direction="out" name="return_status" type="u"/>


        </method>


        <method name="BlmLvdsReady">


            <annotation name="async" value="client"/>


            <arg direction="in" name="requestId" type="u"/>


            <arg direction="out" name="return_status" type="u"/>


        </method>


        <method name="FaultStatusResponse">


            <annotation name="async" value="client"/>


            <arg direction="in" name="faultId" type="u"/>


            <arg direction="in" name="status" type="u"/>


            <arg direction="out" name="return_status" type="u"/>


        </method>


        <method name="GetDisplayStatus">


            <annotation name="async" value="client"/>


            <arg direction="in" name="requestId" type="u"/>


            <arg direction="out" name="return_status" type="u"/>


        </method>


        <method name="GetHdcpState">


            <annotation name="async" value="client"/>


            <arg direction="out" name="return_status" type="u"/>


        </method>


        <method name="SetVideoTuning">


            <annotation name="type_ref.VideoTuning" value="videoTune_st"/>


            <annotation name="async" value="client"/>


            <arg direction="in" name="videoTuning" type="(uuuu)"/>


            <arg direction="out" name="return_videoTuning" type="u"/>


        </method>


        <method name="GetTunedValues">


            <annotation name="async" value="client"/>


            <arg direction="in" name="requestId" type="u"/>


            <arg direction="out" name="return_status" type="u"/>


        </method>


        <method name="GetRegisterDump">


            <annotation name="async" value="client"/>


            <arg direction="in" name="regType" type="u"/>


            <arg direction="in" name="all" type="b"/>


            <arg direction="in" name="start" type="y"/>


            <arg direction="in" name="stop" type="y"/>


            <arg direction="out" name="return_status" type="u"/>


        </method>


        <method name="TouchSimulation">


            <annotation name="com.jci.type_ref.TouchEvents" value="touchEvents_st"/>


            <annotation name="async" value="client"/>


            <arg direction="in" name="touchEvents" type="(y(qq)(qq)(qq)(qq))"/>


            <arg direction="out" name="return_status" type="u"/>


        </method>


        <method name="BrightnessRamp">


            <annotation name="type_ref.brightnessLevel" value="blmRequest_st"/>


            <annotation name="async" value="client"/>


            <arg direction="in" name="brightnessLevel" type="(uuyy)"/>


            <arg direction="out" name="return_value" type="n"/>


        </method>


        <method name="SetSpreadSpectrum">


            <annotation name="async" value="client"/>


            <arg direction="in" name="spreadLevel" type="u"/>


            <arg direction="out" name="return_status" type="u"/>


        </method>


        <method name="SetCMLLevel">


            <annotation name="async" value="client"/>


            <arg direction="in" name="cMLLevel" type="u"/>


            <arg direction="out" name="return_status" type="u"/>


        </method>


        <signal name="brightNessLevelResp">


            <arg name="brightNessLvl" type="n"/>


        </signal>


        <signal name="TPVersionResp">


            <annotation name="type_ref.TPVersion" value="verResponse_st"/>


            <arg name="tPVersion" type="(us)"/>


        </signal>


        <signal name="displayVersion">


            <annotation name="type_ref.dispVersion" value="verResponse_st"/>


            <arg name="dispVersion" type="(us)"/>


        </signal>


        <signal name="NormalModeResp">


            <arg name="normalModeResp" type="n"/>


        </signal>


        <signal name="SleepModeResp">


            <arg name="sleepModeResp" type="n"/>


        </signal>


        <signal name="DiagModeResp">


            <arg name="diagModeResp" type="n"/>


        </signal>


        <signal name="ExtendModeResp">


            <arg name="extendModeResp" type="n"/>


        </signal>


        <signal name="EnablePRBSResp">


            <arg name="enablePRBSResp" type="n"/>


        </signal>


        <signal name="DisablePRBSResp">


            <arg name="disablePRBSResp" type="n"/>


        </signal>


        <signal name="PRBSReportResp">


            <arg name="pRBSReportResp" type="n"/>


        </signal>


        <signal name="ACCOffResp">


            <arg name="aCCOff" type="n"/>


        </signal>


        <signal name="DispOnResp">


            <arg name="dispOn" type="n"/>


        </signal>


        <signal name="DispOffResp">


            <arg name="dispOff" type="n"/>


        </signal>


        <signal name="CurrentStatus">


            <annotation name="type_ref.CurStat" value="blmRequest_st"/>


            <arg name="curStat" type="(uuyy)"/>


        </signal>


        <signal name="FaultStatus">


            <annotation name="type_ref.Fault" value="blmRequest_st"/>


            <arg name="fault" type="(uuyy)"/>


        </signal>


        <signal name="ErrorStatus">


            <arg name="error" type="n"/>


        </signal>


        <signal name="TouchIgnoreStatus">


            <arg name="touchIgnoreStatus" type="u"/>


        </signal>


        <signal name="ErrorEncounteredAlert">


            <arg name="errorAlert" type="u"/>


        </signal>


        <signal name="DisplayStatus">


            <annotation name="com.jci.type_ref.DisplayStatus" value="display_status_data_t"/>


            <arg name="displayStatus" type="(ay)"/>


        </signal>


        <signal name="HdcpState">


            <arg name="hdcpState" type="u"/>


        </signal>


        <signal name="HdcpModeStatus">


            <arg name="hdcpModeStatus" type="u"/>


        </signal>


        <signal name="VideoTuning">


            <arg name="videoTuning" type="u"/>


        </signal>


        <signal name="TunedValues">


            <annotation name="type_ref.TunedValues" value="videoTune_st"/>


            <arg name="tunedValues" type="(uuuu)"/>


        </signal>


        <signal name="RegisterDumpStatus">


            <arg name="registerDumpStatus" type="u"/>


        </signal>


        <signal name="TouchSimulationStatus">


            <arg name="touchSimulationStatus" type="u"/>


        </signal>


        <signal name="SpreadSpectrumStatus">


            <arg name="spreadSpectrumStatus" type="u"/>


        </signal>


        <signal name="CMLLevelStatus">


            <arg name="cMLLevelStatus" type="u"/>


        </signal>


    </interface>


</node>
