<?xml version="1.0" ?>
<node cppname="com.jci.blmsystem.Interface_object">
    <interface name="com.jci.blmsystem.Interface">


        <annotation name="header_include" value="status.h"/>


        <method name="OpenConnection">


            <annotation name="async" value="both"/>


            <annotation name="server_interested_in_client" value="true"/>


            <arg direction="out" name="status" type="i"/>


            <arg direction="out" name="unique_connection_id" type="u"/>


        </method>


        <method name="CloseConnection">


            <annotation name="async" value="both"/>


            <annotation name="server_interested_in_client" value="true"/>


            <arg direction="out" name="status" type="i"/>


        </method>


        <method name="SafeShutDown">


            <annotation name="async" value="both"/>


            <arg direction="out" name="status" type="i"/>


        </method>


        <method name="SafeReboot">


            <annotation name="async" value="both"/>


            <arg direction="out" name="status" type="i"/>


        </method>


        <method name="GenericReboot">


            <annotation name="async" value="both"/>


            <arg direction="in" name="mode_flags" type="i"/>


            <arg direction="out" name="status" type="i"/>


        </method>


        <method name="FactoryReset">


            <annotation name="async" value="both"/>


            <arg direction="out" name="status" type="i"/>


        </method>


        <method name="GetCurrentAccStatus">


            <annotation name="async" value="both"/>


            <arg direction="out" name="acc_state" type="i"/>


            <arg direction="out" name="status" type="i"/>


        </method>


        <method name="GetCurrentSystemState">


            <annotation name="async" value="both"/>


            <arg direction="out" name="system_state" type="u"/>


            <arg direction="out" name="status" type="i"/>


        </method>


        <method name="RegisterForStateTransitionAck">


            <annotation name="async" value="both"/>


            <annotation name="server_interested_in_client" value="true"/>


            <arg direction="in" name="from_state" type="u"/>


            <arg direction="in" name="to_state" type="u"/>


            <arg direction="out" name="_from_state" type="u"/>


            <arg direction="out" name="_to_state" type="u"/>


            <arg direction="out" name="status" type="i"/>


        </method>


        <method name="AcknowledgeStateTransition">


            <annotation name="async" value="both"/>


            <annotation name="server_interested_in_client" value="true"/>


            <arg direction="in" name="from_state" type="u"/>


            <arg direction="in" name="to_state" type="u"/>


            <arg direction="out" name="_from_state" type="u"/>


            <arg direction="out" name="_to_state" type="u"/>


            <arg direction="out" name="status" type="i"/>


        </method>


        <method name="UnregisterFromStateTransitionAck">


            <annotation name="async" value="both"/>


            <annotation name="server_interested_in_client" value="true"/>


            <arg direction="in" name="from_state" type="u"/>


            <arg direction="in" name="to_state" type="u"/>


            <arg direction="out" name="_from_state" type="u"/>


            <arg direction="out" name="_to_state" type="u"/>


            <arg direction="out" name="status" type="i"/>


        </method>


        <method name="RegisterForShutdownAck">


            <annotation name="server_interested_in_client" value="true"/>


            <annotation name="async_server" value="yes"/>


            <annotation name="async_client" value="both"/>


            <annotation name="return_value" value="status"/>


            <annotation name="typeof.status" value="status_t"/>


            <arg direction="out" name="status" type="i"/>


        </method>


        <method name="AcknowledgeShutdown">


            <annotation name="server_interested_in_client" value="true"/>


            <annotation name="async_server" value="yes"/>


            <annotation name="async_client" value="both"/>


            <annotation name="return_value" value="status"/>


            <annotation name="typeof.status" value="status_t"/>


            <arg direction="out" name="status" type="i"/>


        </method>


        <method name="UnregisterFromShutdownAck">


            <annotation name="server_interested_in_client" value="true"/>


            <annotation name="async_server" value="yes"/>


            <annotation name="async_client" value="both"/>


            <annotation name="return_value" value="status"/>


            <annotation name="typeof.status" value="status_t"/>


            <arg direction="out" name="status" type="i"/>


        </method>


        <method name="SignalSystemStateEvent">


            <annotation name="async" value="both"/>


            <arg direction="in" name="event" type="i"/>


            <arg direction="in" name="event_info" type="i"/>


            <arg direction="out" name="_event" type="i"/>


            <arg direction="out" name="_event_info" type="i"/>


            <arg direction="out" name="status" type="i"/>


        </method>


        <method name="ReportTestDiagEntering">


            <annotation name="async" value="both"/>


            <arg direction="out" name="status" type="i"/>


        </method>


        <method name="ReportTestDiagExiting">


            <annotation name="async" value="both"/>


            <arg direction="out" name="status" type="i"/>


        </method>


        <method name="ReportGuiAvailable">


            <annotation name="async" value="both"/>


            <arg direction="out" name="status" type="i"/>


        </method>


        <method name="GetFactoryResetNum">


            <annotation name="async" value="both"/>


            <arg direction="out" name="number" type="i"/>


        </method>


        <method name="ReportXMInstalled">


            <annotation name="async" value="both"/>


            <arg direction="in" name="value" type="i"/>


        </method>


        <signal name="NotifyStateTransition">


            <arg name="current_state" type="u"/>


            <arg name="target_state" type="u"/>


        </signal>


        <signal name="NotifyShutdown">


            <annotation name="typedef_callback" value="BLMSYSTEM_INTERFACE_NotifyShutdown_signal_callback_t"/>


            <arg name="generic_reboot_flags" type="u"/>


        </signal>


        <signal name="NotifyAccChange">


            <arg name="acc_state" type="i"/>


            <arg name="system_state" type="u"/>


        </signal>


        <signal name="NotifySystemStateChange">


            <arg name="old_state" type="u"/>


            <arg name="current_state" type="u"/>


        </signal>


    </interface>


</node>
